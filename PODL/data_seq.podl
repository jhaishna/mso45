
#=======================================
#  Storable Class /data/sequence
#=======================================

STORABLE CLASS /data/sequence {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Global";
	DESCR = "A singleton configuration object of this class is used to maintain various sequence number generators used by the system to stamp bills, items etc. with unique and usually monotonically increasing identifiers. This is also used to generate transaction ids for correlating information with external system like payment engines. A predefined instance is loaded from init_objects.source during installation. It is recommended that you configure the various sequence number formats only once. You may define additional sequences for your use by using element ids greater than 1000000 or  you may define other sequence objects with poid id.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /data/sequence
#=======================================

STORABLE CLASS /data/sequence IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Field PIN_FLD_ACCOUNT_OBJ
#=======================================

POID PIN_FLD_ACCOUNT_OBJ {

	ID = 40;
}


#=======================================
#  Field PIN_FLD_BUFFER
#=======================================

BUF PIN_FLD_BUFFER {

	ID = 34;
}


#=======================================
#  Field PIN_FLD_CREATED_T
#=======================================

TIMESTAMP PIN_FLD_CREATED_T {

	ID = 19;
}


#=======================================
#  Field PIN_FLD_HEADER_NUM
#=======================================

INT PIN_FLD_HEADER_NUM {

	ID = 33;
}


#=======================================
#  Field PIN_FLD_HEADER_STR
#=======================================

STRING PIN_FLD_HEADER_STR {

	ID = 32;
}


#=======================================
#  Field PIN_FLD_MOD_T
#=======================================

TIMESTAMP PIN_FLD_MOD_T {

	ID = 20;
}


#=======================================
#  Field PIN_FLD_NAME
#=======================================

STRING PIN_FLD_NAME {

	ID = 17;
}


#=======================================
#  Field PIN_FLD_PARENT
#=======================================

POID PIN_FLD_PARENT {

	ID = 22;
}


#=======================================
#  Field PIN_FLD_POID
#=======================================

POID PIN_FLD_POID {

	ID = 16;
}


#=======================================
#  Field PIN_FLD_READ_ACCESS
#=======================================

STRING PIN_FLD_READ_ACCESS {

	ID = 1903;
}


#=======================================
#  Field PIN_FLD_WRITE_ACCESS
#=======================================

STRING PIN_FLD_WRITE_ACCESS {

	ID = 1904;
}


#=======================================
#  Storable Class /data
#=======================================

STORABLE CLASS /data {

	SEQ_START = "1000";
	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Generic data class to hold arbitrary information. Recommeded approach is to subtype this generic class to hold specific types of data. For example, define '/data/photo' to hold the image of a person. Note that when subtyping in Infranet, you do not need to add additional fields in the derived class.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	POID PIN_FLD_ACCOUNT_OBJ {

		DESCR = "Link to account object for which this object was created.";
		ORDER = 0;
		CREATE = Required;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	BUF PIN_FLD_BUFFER {

		DESCR = "Container to hold the actual data.";
		ORDER = 0;
		CREATE = Optional;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	TIMESTAMP PIN_FLD_CREATED_T {

		ORDER = 0;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	INT PIN_FLD_HEADER_NUM {

		DESCR = "A generic user-definable header number field.";
		ORDER = 0;
		CREATE = Optional;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_HEADER_STR {

		DESCR = "A generic user-definable header string field.";
		ORDER = 0;
		LENGTH = 255;
		CREATE = Optional;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	TIMESTAMP PIN_FLD_MOD_T {

		ORDER = 0;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_NAME {

		DESCR = "Name of the data object instance.";
		ORDER = 0;
		LENGTH = 255;
		CREATE = Optional;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	POID PIN_FLD_PARENT {

		DESCR = "Link to an arbitrary object that owns this data object.";
		ORDER = 0;
		CREATE = Optional;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	POID PIN_FLD_POID {

		ORDER = 0;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_READ_ACCESS {

		ORDER = 0;
		LENGTH = 1;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_WRITE_ACCESS {

		ORDER = 0;
		LENGTH = 1;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

}


#=======================================
#  Storable Class /data
#=======================================

STORABLE CLASS /data IMPLEMENTATION ORACLE7 {

	SQL_TABLE = "data_t";
	SQL_STORAGE = "tablespace pin00 storage (initial 200k next 200k maxextents unlimited pctincrease 0 ) ";

	#===================
	#  Fields 
	#===================

	POID PIN_FLD_ACCOUNT_OBJ {

		SQL_COLUMN = "account_obj";
	}

	BUF PIN_FLD_BUFFER {

		SQL_TABLE = "data_buffer_buf";
		SQL_COLUMN = "buffer";
		SQL_STORAGE = "tablespace pin00 storage (initial 500k next 500k maxextents unlimited pctincrease 0 ) ";
	}

	TIMESTAMP PIN_FLD_CREATED_T {

		SQL_COLUMN = "created_t";
	}

	INT PIN_FLD_HEADER_NUM {

		SQL_COLUMN = "header_num";
	}

	STRING PIN_FLD_HEADER_STR {

		SQL_COLUMN = "header_str";
	}

	TIMESTAMP PIN_FLD_MOD_T {

		SQL_COLUMN = "mod_t";
	}

	STRING PIN_FLD_NAME {

		SQL_COLUMN = "name";
	}

	POID PIN_FLD_PARENT {

		SQL_COLUMN = "parent";
	}

	POID PIN_FLD_POID {

		SQL_COLUMN = "poid";
	}

	STRING PIN_FLD_READ_ACCESS {

		SQL_COLUMN = "read_access";
	}

	STRING PIN_FLD_WRITE_ACCESS {

		SQL_COLUMN = "write_access";
	}

}

