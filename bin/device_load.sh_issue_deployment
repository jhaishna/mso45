#! /bin/bash
## Modfified on 15-MAY-2015 to remove PID check, now lock file mechanism is used
modem_device_load()
{
         echo "runnng" > mta_job_device_modem.txt
	 mso_mta_job_processor -object_type /mso_mta_job/device/modem

#         pid=$(cat mta_job_device_modem.txt)
#         wait $pid
         rm mta_job_device_modem.txt;
}
wifi_router_device_load()
{
         mso_mta_job_processor -object_type /mso_mta_job/device/router/wifi 
         echo $! > mta_job_device_wifi_router.txt
#         pid=$(cat mta_job_device_wifi_router.txt)
#         wait $pid
         rm mta_job_device_wifi_router.txt;
}

cable_router_device_load()
{
         echo "runnng" > mta_job_device_cable_router.txt
	 mso_mta_job_processor -object_type /mso_mta_job/device/router/cable

#         pid=$(cat mta_job_device_cable_router.txt)
#         wait $pid
         rm mta_job_device_cable_router.txt;
}

nat_device_load()
{
          echo "runnng" > mta_job_device_nat.txt
	 mso_mta_job_processor -object_type /mso_mta_job/device/nat

#         pid=$(cat mta_job_device_nat.txt)
#         wait $pid
         rm mta_job_device_nat.txt;
}

static_ip_device_load()
{
          echo "runnng" > mta_job_device_static_ip.txt
	 mso_mta_job_processor -object_type /mso_mta_job/device/ip/static

#         pid=$(cat mta_job_device_static_ip.txt)
#         wait $pid
         rm mta_job_device_static_ip.txt;
}

framed_ip_device_load()
{
          echo "runnng" > mta_job_device_framed_ip.txt
	 mso_mta_job_processor -object_type /mso_mta_job/device/ip/framed

#         pid=$(cat mta_job_device_framed_ip.txt)
#         wait $pid
         rm mta_job_device_framed_ip.txt;
}


stb_device_load()
{
          echo "runnng" > mta_job_device_stb.txt
	 mso_mta_job_processor -object_type /mso_mta_job/device/stb

#         pid=$(cat mta_job_device_stb.txt)
#         wait $pid
         rm mta_job_device_stb.txt;
}

vc_device_load()
{
         echo "runnng" > mta_job_device_vc.txt
	 mso_mta_job_processor -object_type /mso_mta_job/device/vc 

#         pid=$(cat mta_job_device_vc.txt)
#         wait $pid
         rm mta_job_device_vc.txt;
}

cd $PIN_HOME/mso/apps/mso_bulk_inventory
echo "current working directory is `pwd`"

if [ -e mta_job_device_modem.txt ]
then
       #echo "file is available";
#       pid1=$(cat mta_job_device_modem.txt)
#
#       if ps -p $pid1 > /dev/null
#       then
#               echo " process is already running "
#       else
#               echo " process is not running "
#                modem_device_load
#       fi
              echo " process is already running "

else
       echo " Executing modem_device_load "
       modem_device_load
fi

if [ -e mta_job_device_wifi_router.txt ]
then
       #echo "file is available";
#       pid1=$(cat mta_job_wifi_router.txt)
#
#       if ps -p $pid1 > /dev/null
#       then
#               echo " process is already running "
#       else
#               echo " process is not running "
#                wifi_router_device_load
#       fi
              echo " process is already running "
else
       echo "Executing wifi_router_device_load "
       wifi_router_device_load
fi

if [ -e mta_job_device_cable_router.txt ]
then
       #echo "file is available";
#       pid1=$(cat mta_job_device_cable_router.txt)
#
#       if ps -p $pid1 > /dev/null
#       then
#               echo " process is already running "
#       else
#               echo " process is not running "
#                cable_router_device_load
#       fi

          echo " process is already running "
else
       echo "Executing cable_router_device_load "
       cable_router_device_load
fi

if [ -e mta_job_device_nat.txt ]
then
       #echo "file is available";
#       pid1=$(cat mta_job_device_nat.txt)
#
#       if ps -p $pid1 > /dev/null
#       then
#               echo " process is already running "
#       else
#               echo " process is not running "
#                nat_device_load
#       fi
          echo " process is already running "
else
       echo "Executing nat_device_load "
       nat_device_load
fi

if [ -e mta_job_device_static_ip.txt ]
then
       #echo "file is available";
#       pid1=$(cat mta_job_device_static_ip.txt)
#
#       if ps -p $pid1 > /dev/null
#       then
#               echo " process is already running "
#       else
#               echo " process is not running "
#                static_ip_device_load
#       fi
          echo " process is already running "
else
       echo "Executing static_ip_device_load "
       static_ip_device_load
fi

if [ -e mta_job_device_framed_ip.txt ]
then
       #echo "file is available";
#       pid1=$(cat mta_job_device_framed_ip.txt)
#
#       if ps -p $pid1 > /dev/null
#       then
#               echo " process is already running "
#       else
#               echo " process is not running "
#                framed_ip_device_load
#       fi
          echo " process is already running "
else
       echo "Executing framed_ip_device_load "
       framed_ip_device_load
fi

if [ -e mta_job_device_stb.txt ]
then
       #echo "file is available";
#       pid1=$(cat mta_job_device_stb.txt)
#
#       if ps -p $pid1 > /dev/null
#       then
#               echo " process is already running "
#       else
#               echo " process is not running "
#                stb_device_load
#       fi
          echo " process is already running "
else
       echo "Executing stb_device_load "
       stb_device_load
fi

if [ -e mta_job_device_vc.txt ]
then
       #echo "file is available";
#       pid1=$(cat mta_job_device_vc.txt)
#
#       if ps -p $pid1 > /dev/null
#       then
#               echo " process is already running "
#       else
#               echo " process is not running "
#                vc_device_load
#       fi
         echo " process is already running "
else
       echo "Executing vc_device_load "
       vc_device_load
fi


















